// Generated by view binder compiler. Do not edit!
package com.exco.hostapp.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.exco.hostapp.demo.R;
import com.exco.player.views.ExCoPlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPlayerLogsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ExCoPlayerView dynamicEmbeddedExcoPlayer;

  @NonNull
  public final LinearLayout linearView;

  @NonNull
  public final TextView tvLogs;

  private FragmentPlayerLogsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backButton, @NonNull ConstraintLayout constraintLayout,
      @NonNull ExCoPlayerView dynamicEmbeddedExcoPlayer, @NonNull LinearLayout linearView,
      @NonNull TextView tvLogs) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.constraintLayout = constraintLayout;
    this.dynamicEmbeddedExcoPlayer = dynamicEmbeddedExcoPlayer;
    this.linearView = linearView;
    this.tvLogs = tvLogs;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlayerLogsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlayerLogsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_player_logs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlayerLogsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.dynamic_embedded_exco_player;
      ExCoPlayerView dynamicEmbeddedExcoPlayer = ViewBindings.findChildViewById(rootView, id);
      if (dynamicEmbeddedExcoPlayer == null) {
        break missingId;
      }

      id = R.id.linearView;
      LinearLayout linearView = ViewBindings.findChildViewById(rootView, id);
      if (linearView == null) {
        break missingId;
      }

      id = R.id.tv_Logs;
      TextView tvLogs = ViewBindings.findChildViewById(rootView, id);
      if (tvLogs == null) {
        break missingId;
      }

      return new FragmentPlayerLogsBinding((ConstraintLayout) rootView, backButton,
          constraintLayout, dynamicEmbeddedExcoPlayer, linearView, tvLogs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
