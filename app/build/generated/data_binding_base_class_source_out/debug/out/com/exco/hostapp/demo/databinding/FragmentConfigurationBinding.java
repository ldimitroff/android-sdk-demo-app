// Generated by view binder compiler. Do not edit!
package com.exco.hostapp.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.exco.hostapp.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentConfigurationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText appBundleEt;

  @NonNull
  public final TextView appBundleLabel;

  @NonNull
  public final EditText appNameEt;

  @NonNull
  public final TextView appNameLabel;

  @NonNull
  public final LinearLayout configurationFormContainer;

  @NonNull
  public final EditText etAppCategory;

  @NonNull
  public final EditText etAppStoreId;

  @NonNull
  public final EditText etAppStoreUrl;

  @NonNull
  public final EditText etAppVersion;

  @NonNull
  public final EditText etDeviceId;

  @NonNull
  public final EditText etIfa;

  @NonNull
  public final EditText etPlayerId;

  @NonNull
  public final Button loadPlayerButton;

  @NonNull
  public final TextView playerIdLabel;

  @NonNull
  public final TextView screenTitle;

  @NonNull
  public final TextView tvAppCategory;

  @NonNull
  public final TextView tvAppStoreId;

  @NonNull
  public final TextView tvAppStoreUrl;

  @NonNull
  public final TextView tvAppVersion;

  @NonNull
  public final TextView tvDeviceId;

  @NonNull
  public final TextView tvIfa;

  private FragmentConfigurationBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText appBundleEt, @NonNull TextView appBundleLabel, @NonNull EditText appNameEt,
      @NonNull TextView appNameLabel, @NonNull LinearLayout configurationFormContainer,
      @NonNull EditText etAppCategory, @NonNull EditText etAppStoreId,
      @NonNull EditText etAppStoreUrl, @NonNull EditText etAppVersion, @NonNull EditText etDeviceId,
      @NonNull EditText etIfa, @NonNull EditText etPlayerId, @NonNull Button loadPlayerButton,
      @NonNull TextView playerIdLabel, @NonNull TextView screenTitle,
      @NonNull TextView tvAppCategory, @NonNull TextView tvAppStoreId,
      @NonNull TextView tvAppStoreUrl, @NonNull TextView tvAppVersion, @NonNull TextView tvDeviceId,
      @NonNull TextView tvIfa) {
    this.rootView = rootView;
    this.appBundleEt = appBundleEt;
    this.appBundleLabel = appBundleLabel;
    this.appNameEt = appNameEt;
    this.appNameLabel = appNameLabel;
    this.configurationFormContainer = configurationFormContainer;
    this.etAppCategory = etAppCategory;
    this.etAppStoreId = etAppStoreId;
    this.etAppStoreUrl = etAppStoreUrl;
    this.etAppVersion = etAppVersion;
    this.etDeviceId = etDeviceId;
    this.etIfa = etIfa;
    this.etPlayerId = etPlayerId;
    this.loadPlayerButton = loadPlayerButton;
    this.playerIdLabel = playerIdLabel;
    this.screenTitle = screenTitle;
    this.tvAppCategory = tvAppCategory;
    this.tvAppStoreId = tvAppStoreId;
    this.tvAppStoreUrl = tvAppStoreUrl;
    this.tvAppVersion = tvAppVersion;
    this.tvDeviceId = tvDeviceId;
    this.tvIfa = tvIfa;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentConfigurationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentConfigurationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_configuration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentConfigurationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bundle_et;
      EditText appBundleEt = ViewBindings.findChildViewById(rootView, id);
      if (appBundleEt == null) {
        break missingId;
      }

      id = R.id.app_bundle_label;
      TextView appBundleLabel = ViewBindings.findChildViewById(rootView, id);
      if (appBundleLabel == null) {
        break missingId;
      }

      id = R.id.app_name_et;
      EditText appNameEt = ViewBindings.findChildViewById(rootView, id);
      if (appNameEt == null) {
        break missingId;
      }

      id = R.id.app_name_label;
      TextView appNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (appNameLabel == null) {
        break missingId;
      }

      id = R.id.configuration_form_container;
      LinearLayout configurationFormContainer = ViewBindings.findChildViewById(rootView, id);
      if (configurationFormContainer == null) {
        break missingId;
      }

      id = R.id.et_appCategory;
      EditText etAppCategory = ViewBindings.findChildViewById(rootView, id);
      if (etAppCategory == null) {
        break missingId;
      }

      id = R.id.et_appStoreId;
      EditText etAppStoreId = ViewBindings.findChildViewById(rootView, id);
      if (etAppStoreId == null) {
        break missingId;
      }

      id = R.id.et_appStoreUrl;
      EditText etAppStoreUrl = ViewBindings.findChildViewById(rootView, id);
      if (etAppStoreUrl == null) {
        break missingId;
      }

      id = R.id.et_appVersion;
      EditText etAppVersion = ViewBindings.findChildViewById(rootView, id);
      if (etAppVersion == null) {
        break missingId;
      }

      id = R.id.et_device_id;
      EditText etDeviceId = ViewBindings.findChildViewById(rootView, id);
      if (etDeviceId == null) {
        break missingId;
      }

      id = R.id.et_ifa;
      EditText etIfa = ViewBindings.findChildViewById(rootView, id);
      if (etIfa == null) {
        break missingId;
      }

      id = R.id.et_player_id;
      EditText etPlayerId = ViewBindings.findChildViewById(rootView, id);
      if (etPlayerId == null) {
        break missingId;
      }

      id = R.id.load_player_button;
      Button loadPlayerButton = ViewBindings.findChildViewById(rootView, id);
      if (loadPlayerButton == null) {
        break missingId;
      }

      id = R.id.player_id_label;
      TextView playerIdLabel = ViewBindings.findChildViewById(rootView, id);
      if (playerIdLabel == null) {
        break missingId;
      }

      id = R.id.screen_title;
      TextView screenTitle = ViewBindings.findChildViewById(rootView, id);
      if (screenTitle == null) {
        break missingId;
      }

      id = R.id.tv_appCategory;
      TextView tvAppCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvAppCategory == null) {
        break missingId;
      }

      id = R.id.tv_appStoreId;
      TextView tvAppStoreId = ViewBindings.findChildViewById(rootView, id);
      if (tvAppStoreId == null) {
        break missingId;
      }

      id = R.id.tv_appStoreUrl;
      TextView tvAppStoreUrl = ViewBindings.findChildViewById(rootView, id);
      if (tvAppStoreUrl == null) {
        break missingId;
      }

      id = R.id.tv_appVersion;
      TextView tvAppVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvAppVersion == null) {
        break missingId;
      }

      id = R.id.tv_device_id;
      TextView tvDeviceId = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceId == null) {
        break missingId;
      }

      id = R.id.tv_ifa;
      TextView tvIfa = ViewBindings.findChildViewById(rootView, id);
      if (tvIfa == null) {
        break missingId;
      }

      return new FragmentConfigurationBinding((ConstraintLayout) rootView, appBundleEt,
          appBundleLabel, appNameEt, appNameLabel, configurationFormContainer, etAppCategory,
          etAppStoreId, etAppStoreUrl, etAppVersion, etDeviceId, etIfa, etPlayerId,
          loadPlayerButton, playerIdLabel, screenTitle, tvAppCategory, tvAppStoreId, tvAppStoreUrl,
          tvAppVersion, tvDeviceId, tvIfa);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
